// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const supabaseUrl = import.meta.env.VITE_SUPABASE_URL;
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('Missing Supabase environment variables');
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Initialize the Supabase client
export const supabase = createClient<Database>(
  supabaseUrl || '',
  supabaseAnonKey || ''
);

// NOTE: Bucket creation is now handled through SQL migrations
// We don't need to try to create the bucket here - it will be created by SQL
const checkPdfBucket = async () => {
  try {
    const { data: buckets, error } = await supabase.storage.listBuckets();
    
    if (error) {
      console.error('Error checking storage buckets:', error);
      return;
    }
    
    const pdfBucketExists = buckets.some(bucket => bucket.name === 'pdfs');
    
    if (pdfBucketExists) {
      console.log('PDF bucket exists and is ready to use.');
    } else {
      console.log('PDF bucket does not exist yet. It needs to be created via SQL migrations.');
    }
  } catch (e) {
    console.error('Error checking PDF bucket:', e);
  }
};

// Call the function to check bucket existence
checkPdfBucket();

// Export the Supabase URL
export const SUPABASE_URL = supabaseUrl || '';
